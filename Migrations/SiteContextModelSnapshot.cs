// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PapaLuiPizzaria.Data;

#nullable disable

namespace WebApp1.Migrations
{
    [DbContext(typeof(SiteContext))]
    partial class SiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("DeliveryProduct", b =>
                {
                    b.Property<int>("DeliveriesID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductsProductID")
                        .HasColumnType("INTEGER");

                    b.HasKey("DeliveriesID", "ProductsProductID");

                    b.HasIndex("ProductsProductID");

                    b.ToTable("DeliveryProduct");
                });

            modelBuilder.Entity("PapaLuiPizzaria.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("PapaLuiPizzaria.Models.Delivery", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("FirstName");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Delivery", (string)null);
                });

            modelBuilder.Entity("PapaLuiPizzaria.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductID")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("ProductID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PapaLuiPizzaria.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Credits")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoreID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ProductID");

                    b.HasIndex("StoreID");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("PapaLuiPizzaria.Models.Store", b =>
                {
                    b.Property<int>("StoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Budget")
                        .HasColumnType("money");

                    b.Property<Guid>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<int?>("DeliveryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("StoreID");

                    b.HasIndex("DeliveryID");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("PapaLuiPizzaria.Models.StoreAssignment", b =>
                {
                    b.Property<int>("DeliveryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("DeliveryID");

                    b.ToTable("StoreAssignments");
                });

            modelBuilder.Entity("DeliveryProduct", b =>
                {
                    b.HasOne("PapaLuiPizzaria.Models.Delivery", null)
                        .WithMany()
                        .HasForeignKey("DeliveriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PapaLuiPizzaria.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PapaLuiPizzaria.Models.Order", b =>
                {
                    b.HasOne("PapaLuiPizzaria.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PapaLuiPizzaria.Models.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PapaLuiPizzaria.Models.Product", b =>
                {
                    b.HasOne("PapaLuiPizzaria.Models.Store", "Store")
                        .WithMany("Products")
                        .HasForeignKey("StoreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("PapaLuiPizzaria.Models.Store", b =>
                {
                    b.HasOne("PapaLuiPizzaria.Models.Delivery", "Administrator")
                        .WithMany()
                        .HasForeignKey("DeliveryID");

                    b.Navigation("Administrator");
                });

            modelBuilder.Entity("PapaLuiPizzaria.Models.StoreAssignment", b =>
                {
                    b.HasOne("PapaLuiPizzaria.Models.Delivery", "Delivery")
                        .WithOne("StoreAssignment")
                        .HasForeignKey("PapaLuiPizzaria.Models.StoreAssignment", "DeliveryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Delivery");
                });

            modelBuilder.Entity("PapaLuiPizzaria.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PapaLuiPizzaria.Models.Delivery", b =>
                {
                    b.Navigation("StoreAssignment");
                });

            modelBuilder.Entity("PapaLuiPizzaria.Models.Product", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PapaLuiPizzaria.Models.Store", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
